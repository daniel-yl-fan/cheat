# where command is
alias whereis="whereis"

# reset terminal
alias reset="reset"

# directory stack
alias pushd="pushd `pwd`"
alias dirs="dirs -v"

# exit shell without save command history
kill -9 $$

# who is online
whoami who w users id last lastlog

# colorized printf
# RED
printf "\x1B[91m \x1B[0m \n"
# GREEN
printf "\x1B[92m \x1B[0m \n"
# CYAN
printf "\x1B[93m \x1B[0m \n"
# BLUE
printf "\x1B[94m \x1B[0m \n"
# MAGENTA
printf "\x1B[95m \x1B[0m \n"

free -h

df -h

date --date='@1571034633'

ln --symbolic --force source_file target_file

netstat --verbose --numeric --wide --all --program --inet --sctp --tcp

When they are not quoted, $* and $@ are the same.
"$*" expands to a single word "$1c$2c...". Usually c is a space, but it's actually the first character of IFS, 
"$@" expands to separate words: "$1" "$2" ...
$* foo.txt
"$*" "foo.txt"
"$@" "foo.txt"
$* foo.txt bar.txt
"$*" "foo.txt bar.txt"
"$@" "foo.txt" "bar.txt"

IFS stands for "internal field separator". It is used by the shell to determine how to do word splitting, i. e. how to recognize word boundaries.
The default value for IFS consists of whitespace characters (to be precise: space, tab and newline). Each character can be a word boundary.
The first character of IFS is special: It is used to delimit words in the output when using the special $* variable

declare -a ARRARY
ARRARY=()
ARRARY=(foo bar) 
ARRARY[2]=foobar
for ELEMENT in ${ARRARY[@]}; do
    printf "${ELEMENT}\n"
done

ARRARY+=barfoo
echo ${ARRAY[@]}
echo ${ARRAY[*]}
echo ${ARRAY[2]}
echo ${#ARRARY[*]}      # Number of items in the array
echo ${!my_array[@]}    # index
unset ARRAY[0]
unset ARRAY

# associative array
declare -A ASSOCIATIVE_ARRAY
ASSOCIATIVE_ARRAY=([foo]=bar [baz]=foobar)

if [ -f "file" ] ; then
fi
if [ ! -f "file" ] ; then
fi
if [ -d "file" ] ; then
fi

# multi-user.target: analogous to runlevel 3
# graphical.target: analogous to runlevel 5
# systemctl get-default
#
# systemctl set-default TARGET.target
# systemctl set-default multi-user.target
# Removed /etc/systemd/system/default.target.
# Created symlink /etc/systemd/system/default.target â†’ /usr/lib/systemd/system/multi-user.target.
# systemctl set-default graphical.target

ifdown enp0s3
ifup   enp0s3

/etc/sysconfig/network-scripts/ifcfg-eth0
ONBOOT=no
ONBOOT=yes
