# stty -a

# General useful ASCII codes
The ANSI codes always start with the ESC character. (ASCII 0x1B or octal 033) or \e as escape in bash.
The Ctrl-Key representation is simply associating the non-printable characters from ASCII code 1 with the printable (letter) characters from ASCII code 65 ("A").
ASCII code 1 would be ^A (Ctrl-A), while ASCII (American Standard Code for Information Interchange) code 7 (BEL) would be ^G (Ctrl-G).

Name  decimal octal   hex     C-escape    Ctrl-Key    Description
BEL   7       007     0x07    \a          ^G          Terminal bell
BS    8       010     0x08    \b          ^H          Backspace
HT    9       011     0x09    \t          ^I          Horizontal TAB
LF    10      012     0x0A    \n          ^J          Linefeed (newline)
VT    11      013     0x0B    \v          ^K          Vertical TAB
FF    12      014     0x0C    \f          ^L          Formfeed (also: New page NP)
CR    13      015     0x0D    \r          ^M          Carriage return
ESC   27      033     0x1B    <none>      ^[          Escape character
DEL   127     177     0x7F    <none>      <none>      Delete character

# Cursor handling
ANSI            terminfo equivalent     Description
[ <X> ; <Y> H
[ <X> ; <Y> f   cup <X> <Y>             Home-positioning to X and Y coordinates,
                                        it seems that ANSI uses 1-1 as home while tput uses 0-0
[ H             home                    Move cursor to home position (0-0)
7               sc                      Save current cursor position
8               rc                      Restore saved cursor position
\b              cub1                    move left one space (backspace)
VT100 [ ? 25 l  civis                   make cursor invisible
VT100 [ ? 25 h  cvvis                   make cursor visible

# Erasing text
ANSI    terminfo equivalent         Description
[ K
[ 0 K   el                          Clear line from current cursor position to end of line
[ 1 K   el1                         Clear line from beginning to current cursor position
[ 2 K   el2                         Clear whole line (cursor position unchanged)

# General text attributes
ANSI    terminfo equivalent     Description
[ 0 m   sgr0                    Reset all attributes
[ 1 m   bold                    Set "bright" attribute
[ 2 m   dim                     Set "dim" attribute
[ 3 m   smso                    Set "standout" attribute
[ 4 m   set smul unset rmul     Set "underscore" (underlined text) attribute
[ 5 m   blink                   Set "blink" attribute
[ 7 m   rev                     Set "reverse" attribute
[ 8 m   invis                   Set "hidden" attribute

# Foreground coloring
ANSI            terminfo equivalent     Description
[ 3 0 m         setaf 0                 Set foreground to color #0 - black
[ 3 1 m         setaf 1                 Set foreground to color #1 - red
[ 3 2 m         setaf 2                 Set foreground to color #2 - green
[ 3 3 m         setaf 3                 Set foreground to color #3 - yellow
[ 3 4 m         setaf 4                 Set foreground to color #4 - blue
[ 3 5 m         setaf 5                 Set foreground to color #5 - magenta
[ 3 6 m         setaf 6                 Set foreground to color #6 - cyan
[ 3 7 m         setaf 7                 Set foreground to color #7 - white
[ 3 9 m         setaf 9                 Set default color as foreground color

# Background coloring
ANSI        terminfo equivalent         Description
[ 4 0 m     setab 0                     Set background to color #0 - black
[ 4 1 m     setab 1                     Set background to color #1 - red
[ 4 2 m     setab 2                     Set background to color #2 - green
[ 4 3 m     setab 3                     Set background to color #3 - yellow
[ 4 4 m     setab 4                     Set background to color #4 - blue
[ 4 5 m     setab 5                     Set background to color #5 - magenta
[ 4 6 m     setab 6                     Set background to color #6 - cyan
[ 4 7 m     setab 7                     Set background to color #7 - white
[ 4 9 m     setab 9                     Set default color as background color

# save, restore screen
tput smcup
tput rmcup
echo -e '\033[?47h' # save screen
echo -e '\033[?47l' # restore screen

infocmp screen-256colors
terminfo
tput
Capname Description
longname    Full name of the terminal type
lines   Number of lines in the terminal
cols    Number of columns in the terminal
colors  Number of colors available

sc  Save the cursor position
rc  Restore the cursor position
home    Move the cursor to upper left corner (0,0)
cup <row> <col> Move the cursor to position row, col
cud1    Move the cursor down 1 line
cuu1    Move the cursor up 1 line
cub     N Move N characters left
cuf     N Move N characters right
cub1    move left one space
cuf1    non-destructive space (move right one space)
ll      last line, first column (if no cup)
civis   Set to cursor to be invisible
cnorm   Set the cursor to its normal state

bold    Start bold text
smul    Start underlined text
rmul    End underlined text
rev     Start reverse video
blink   Start blinking text
dim     turn on half-bright mode
invis   Start invisible text
smso    Start "standout" mode, Standout mode is reverse on many terminals, bold on others.
rmso    End "standout" mode
sgr0    Turn off all attributes
    sgr 0 0     turn off standout; turn off underline
    sgr 0 1     turn off standout; turn on underline
    sgr 1 0     turn on standout; turn off underline
    sgr 1 1     turn on standout; turn on underline
    sgr0        short for sgr 0 0
setaf <value>    Set foreground color
setab <value>    Set a background colour using ANSI escape
setf [1-7]       Set a foreground colour
setb [1-7]       Set a background colour
    setaf 1 Red
    setaf 2 Green
    setaf 3 Yellow
    setaf 4 Blue
    setaf 5 Purple
    setaf 6 Cyan
    setaf 7 Gray

smcup    Save screen contents
rmcup    Restore screen contents
el       Clear from the cursor to the end of the line
el1      Clear from the cursor to the beginning of the line
ed       Clear from the cursor to the end of the screen
clear    Clear the entire screen and home the cursor
ech     N Erase N characters
ed      clear to end of screen
ich N   insert N characters (moves rest of line forward!)
il N    insert N lines


ansi-test()
{
for a in 0 1 4 5 7; do
    echo "a=$a " 
    for (( f=0; f<=9; f++ )) ; do
        for (( b=0; b<=9; b++ )) ; do
            #echo -ne "f=$f b=$b" 
            echo -ne "\\033[${a};3${f};4${b}m"
            echo -ne "\\\\\\\\033[${a};3${f};4${b}m"
            echo -ne "\\033[0m "
        done
        echo
    done
    echo
done
echo
}

while sleep 1;do tput sc;tput setaf 2;tput cup 0 $(($(tput cols)-29));date;tput rc;done&

width=$(tput cols); height=$(tput lines); str='hello world'; length=${#str}; clear; tput cup $((height / 2)) $(((width / 2) - (length / 2))); echo ${str}

echo -e "\e[H hello"

# Reset
Color_Off='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green
UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[0;105m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

# colorized printf
# red
printf "\x1B[91m \x1B[0m \n"
# green
printf "\x1B[92m \x1B[0m \n"
# yellow
printf "\x1B[93m \x1B[0m \n"
# blue
printf "\x1B[94m \x1B[0m \n"
# magenta
printf "\x1B[95m \x1B[0m \n"
# cyan
printf "\x1B[96m \x1B[0m \n"


